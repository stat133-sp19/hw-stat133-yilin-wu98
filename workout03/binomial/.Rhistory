devtools::test()
?factorial
d1 <- data.frame(x=1:5,y=1:5)
barplot(d1)
hist(d1)
hist(d1$x,d1$y)
plot(d1)
plot(d1,type='h')
devtools::document()
devtools::document()
devtools::build()
devtools::check()
devtools::check_man()
source(../../R/binomial.R)
context("Test checker functions")
test_that("test check_prob works",{
expect_true(check_prob(0))
expect_true(check_prob(1))
expect_length(check_prob(0.5),1)
expect_error(check_prob(-1),"p has to be a number between 0 and 1")
expect_error(check_prob("1"),"p should be a number")
})
test_that("test check_trials works",{
expect_length(check_trials(5),1)
expect_true(check_trials(10))
expect_error(check_trials(-10),"invalid trials value")
})
test_that("test check_success works",{
expect_length(check_success(1,2),1)
expect_true(check_success(1,2))
expect_error(check_success(-1,2),"invalid success value")
expect_error(check_success(3,1),"success cannot be greater than trials")
})
source("../../R/binomial.R")
context("Test checker functions")
test_that("test check_prob works",{
expect_true(check_prob(0))
expect_true(check_prob(1))
expect_length(check_prob(0.5),1)
expect_error(check_prob(-1),"p has to be a number between 0 and 1")
expect_error(check_prob("1"),"p should be a number")
})
test_that("test check_trials works",{
expect_length(check_trials(5),1)
expect_true(check_trials(10))
expect_error(check_trials(-10),"invalid trials value")
})
test_that("test check_success works",{
expect_length(check_success(1,2),1)
expect_true(check_success(1,2))
expect_error(check_success(-1,2),"invalid success value")
expect_error(check_success(3,1),"success cannot be greater than trials")
})
devtools::document()
devtools::check_man()
devtools::test()
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
devtools::test()
1:5 > 1
sum(2:5>1)
round(1:5)
round(1:5)
devtools::test()
1:2 <0
sum(1:2<0)
devtools::test()
devtools::test()
round(1)
devtools::test()
devtools::test()
type(4)
class(4)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
library(binomial)
bin_cumulative(5,0.5)
dis2 <-  bin_cumulative(5,0.5)
plot(dis2)
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
library(binomial)
dis2 <-  bin_cumulative(5,0.5)
plot(dis2)
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
dis2 <-  bin_cumulative(5,0.5)
plot(dis2)
dis1 <- bin_distribution(5,0.5)
plot(dis1)
bin_variable(10,0.3)
summary(bin_variable(10,0.3))
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
summary(bin_variable(10,0.3))
bin_mean(10,0.3)
devtools::document()
devtools::check_man()
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
devtools::test()
devtools::build_vignettes()
devtools::build()
devtools::install()
library(binomial)
plot(bin_cumulative(trials=5,prob=0.5))
plot(bin_cumulative(10,0.1))
devtools::build()
devtools::install()
plot(bin_cumulative(10,0.1))
devtools::build_vignettes()
devtools::build()
devtools::install()
library(binomial)
plot(bin_cumulative(10,0.1))
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::build()             # build bundle
devtools::install()           # install package
library(binomial)
plot(bin_cumulative(10,0.1))
plot(bin_distribution(10,0.1))
plot(bin_distribution(5,0.1))
plot(bin_distribution(5,0.3))
plot(bin_distribution(5,0.5))
?bin_cumulative
devtools::document()          # generate documentation
devtools::check_man()         # check documentation
devtools::test()              # run tests
devtools::build_vignettes()   # build vignettes
devtools::build()             # build bundle
devtools::install()           # install package
library(binomial)
?bin_cumulative
?bin_variable()
?bin_variable
?bin_cumulative
